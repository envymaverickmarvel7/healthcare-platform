name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout source code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Setup Node.js and enable pnpm caching
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'pnpm' # enables built-in pnpm cache

      # 3. Setup pnpm (official action, not manual install)
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8 # Use your required pnpm version. Change if needed.

      # 4. Install dependencies
      - name: Install dependencies
        run: pnpm install

      # 5. Restore Turbo cache for faster builds
      - name: Turbo cache restore
        uses: actions/cache@v3
        with:
          path: .turbo
          key: turbo-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
      
      # 6. Build all packages/apps
      - name: Build all apps/packages
        run: pnpm build

      # 7. Run tests
      - name: Run tests
        run: pnpm test

      # 8. Lint all code
      - name: Lint
        run: pnpm lint

      # 9. Build Docker images using docker-compose
      - name: Build Docker images
        run: docker-compose -f docker/docker-compose.yaml build

      # 10. (Optional) Push to Docker registry
      # - name: Log in to registry
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.REGISTRY_USERNAME }}
      #     password: ${{ secrets.REGISTRY_PASSWORD }}

      # - name: Push images
      #   run: docker-compose -f docker/docker-compose.yaml push

      # 11. (Optional) Deploy to cloud/Kubernetes
      # Add deployment steps matching your cloud provider or host

